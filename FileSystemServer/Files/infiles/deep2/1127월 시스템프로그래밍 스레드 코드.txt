#include<stdio.h>
#include<pthread.h>
#include<unistd.h>

void* thread1(void *param);
void* thread2(void *param);
void* thread3(void *param);
void* thread4(void *parem);
int car, wheelRem =0, doorRem =0, bodyRem =0;

int main() {
	pthread_t tid1, tid2, tid3, tid4;
	
	printf("car : ");
	scanf("%d", &car);
	
	pthread_create(&tid1, NULL, thread1, NULL);
	pthread_create(&tid2, NULL, thread2, NULL);
	pthread_create(&tid3, NULL, thread3, NULL);
	pthread_create(&tid4, NULL, thread4, NULL);
	
	pthread_join(tid1, NULL);
	pthread_join(tid2, NULL);
	pthread_join(tid3, NULL);
	pthread_join(tid4, NULL);
	return 0;
}

void* thread1(void *param) {
	int wheel = 0;
	
	while(wheel != car * 4) {
		wheel += 1;
		wheelRem += 1;
		printf("wheel Thread ID : %ld, wheel create : %d, wheelRem : %d\n", pthread_self(), wheel, wheelRem);
		sleep(1); 
	}
	
	printf("\nwheel ID : %ld, wheel create : %d, wheelRem : %d wheel Thread Complete\n", pthread_self(), wheel, wheelRem);
}

void* thread2(void *param) {
	int body = 0;
	
	while(body != car) {
		body += 1;
		bodyRem += 1;
		printf("body Thread ID : %ld, body create : %d, bodyRem : %d\n", pthread_self(), body, bodyRem);
		sleep(3);
	}
	
	printf("\nbody Thread ID : %ld, body create : %d, bodyRem : %d body Thread Complete\n", pthread_self(), body, bodyRem);
}

void* thread3(void *param) {
	int door = 0;
	
	while(door != car * 3) {
		door += 1;
		doorRem += 1;
		printf("door Thread ID : %ld, door create : %d, doorRem : %d\n", pthread_self(), door, doorRem);
		sleep(2);
	} 
	
	printf("\ndoor Thread ID : %ld, door create : %d, doorRem : %d door Thread Complete\n", pthread_self(), door, doorRem);
	
}

void* thread4(void *param) {
	int assemble = 0;
	while(assemble != car) {
		if(wheelRem >= 4 && bodyRem >= 1 && doorRem >= 3) {
			assemble += 1;
			wheelRem -= 4;
			bodyRem -= 1;
			doorRem -= 3;
		}
		printf("\nassemble Thread ID : %ld, assemble create : %d, wheelRem : %d, bodyRem : %d, doorRem : %d\n", pthread_self(), assemble, wheelRem, bodyRem, doorRem);
		sleep(3);
	}
	
	
}
